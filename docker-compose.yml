version: '3.3'
services:
  grafana:
    image: grafana/grafana:8.0.6
    user: ${MONITOR}
    container_name: grafana
    expose:
      - 3000      
    ports: 
      - 3000:3000  
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}  
      - GF_USERS_ALLOW_SIGN_UP=false
    # depends_on:
    #   - influxdb
    links:
      - influxdb
    networks:
      - nodered-stack-networks
    restart: unless-stopped
    
  
  node-red:
    image: nodered/node-red:1.3.5
    container_name: node-red
    user: ${MONITOR}
    environment:
       - TZ=Europe/Moscow
    ports:
       - "1880:1880"
    volumes:
       - ./node-red:/data
    links:
       - influxdb   
    networks:
       - nodered-stack-networks
    restart: always
   

  influxdb:
    image: influxdb:1.8.0
    container_name: influxdb
    ports:
       - "8086:8086"
    volumes:
       - ./influxdb:/var/lib/influxdb     
    environment:
        - INFLUXDB_DB=${INFLUXDB_DB}
        - INFLUXDB_ADMIN_ENABLED=true
        - INFLUXDB_ADMIN_LOGIN=${INFLUXDB_ADMIN_LOGIN} 
        - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
        # - INFLUXDB_USER_LOGIN=${INFLUXDB_USER_LOGIN}
        # - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    
    networks:
        - nodered-stack-networks
    restart: unless-stopped
  
  chronograf:
    image: chronograf:1.8.8
    container_name: chronograf
    ports:
      - "8087:8888"
    volumes:
    - ./chronograf:/var/lib/chronograf
    depends_on:
      - influxdb 
    networks:
      - nodered-stack-networks
    restart: always  


networks:
  nodered-stack-networks:
   driver: bridge
    
volumes:
    grafana: {}
    node-red: {}
    influxdb: {}
    chronograf: {}

